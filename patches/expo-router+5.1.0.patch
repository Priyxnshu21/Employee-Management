diff --git a/node_modules/expo-router/build/views/Navigator.js b/node_modules/expo-router/build/views/Navigator.js
index 3f27602..0fdb67e 100644
--- a/node_modules/expo-router/build/views/Navigator.js
+++ b/node_modules/expo-router/build/views/Navigator.js
@@ -50,6 +50,10 @@ const Route_1 = require("../Route");
 const StackClient_1 = require("../layouts/StackClient");
 const withLayoutContext_1 = require("../layouts/withLayoutContext");
 const useScreens_1 = require("../useScreens");
+
+// ADD THIS LINE TO IMPORT PLATFORM
+const react_native_1 = require("react-native"); // <--- ADD THIS LINE
+
 exports.NavigatorContext = React.createContext(null);
 if (process.env.NODE_ENV !== 'production') {
     exports.NavigatorContext.displayName = 'NavigatorContext';
@@ -82,10 +86,10 @@ function Navigator({ initialRouteName, screenOptions, children, router, routerOp
         return null;
     }
     return (<exports.NavigatorContext.Provider value={{
-            ...navigation,
-            contextKey,
-            router,
-        }}>
+                ...navigation,
+                contextKey,
+                router,
+            }}>
       {nonScreenChildren}
     </exports.NavigatorContext.Provider>);
 }
@@ -116,8 +120,8 @@ function SlotNavigator(props) {
  * Renders the currently selected content.
  *
  * There are actually two different implementations of `<Slot/>`:
- *  - Used inside a `_layout` as the `Navigator`
- *  - Used inside a `Navigator` as the content
+ * - Used inside a `_layout` as the `Navigator`
+ * - Used inside a `Navigator` as the content
  *
  * Since a custom `Navigator` will set the `NavigatorContext.contextKey` to
  * the current `_layout`, you can use this to determine if you are inside
@@ -149,8 +153,9 @@ const SlotNavigatorWrapper = process.env.EXPO_OS === 'android' && (0, react_nati
  * The default navigator for the app when no root _layout is provided.
  */
 function DefaultNavigator() {
-    return (<SlotNavigatorWrapper style={{ flex: 1 }}>
-      <SlotNavigator />
+    return (
+    <SlotNavigatorWrapper {...(react_native_1.Platform.OS === 'ios' ? { style: { flex: 1 } } : {})}>
+        <SlotNavigator />
     </SlotNavigatorWrapper>);
 }
 Navigator.Slot = NavigatorSlot;
